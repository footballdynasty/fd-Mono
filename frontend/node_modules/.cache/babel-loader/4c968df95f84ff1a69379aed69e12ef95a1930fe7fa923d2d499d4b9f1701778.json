{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api/v2';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});api.interceptors.request.use(config=>{// Add auth token to requests\nconst token=localStorage.getItem('auth_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});api.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2;// Handle 401 errors by clearing auth data\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('auth_token');localStorage.removeItem('user');localStorage.removeItem('selected_team');window.location.reload();}console.error('API Error:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);return Promise.reject(error);});export const teamApi={getAll:params=>api.get('/teams',{params}),getById:id=>api.get(\"/teams/\".concat(id)),getByConference:conference=>api.get(\"/teams/conference/\".concat(conference)),getConferences:()=>api.get('/teams/conferences'),getHumanTeams:()=>api.get('/teams/human'),create:team=>api.post('/teams',team),update:(id,team)=>api.put(\"/teams/\".concat(id),team),delete:id=>api.delete(\"/teams/\".concat(id))};export const gameApi={getAll:params=>api.get('/games',{params}),getById:id=>api.get(\"/games/\".concat(id)),getByTeam:(teamId,year)=>api.get(\"/games/team/\".concat(teamId),{params:{year}}),getByWeek:weekId=>api.get(\"/games/week/\".concat(weekId)),getUpcoming:teamId=>api.get('/games/upcoming',{params:{teamId}}),getRecent:(teamId,limit)=>api.get('/games/recent',{params:{teamId,limit}}),create:game=>api.post('/games',game),update:(id,game)=>api.put(\"/games/\".concat(id),game),updateScore:(id,homeScore,awayScore)=>api.patch(\"/games/\".concat(id,\"/score\"),{homeScore,awayScore}),delete:id=>api.delete(\"/games/\".concat(id))};export const standingsApi={// Get standings with flexible filtering options\ngetStandings:params=>api.get('/standings',{params}),// Get standing by ID\ngetById:id=>api.get(\"/standings/\".concat(id)),// Get team-specific standings\ngetTeamStanding:(teamId,year)=>{if(year){return api.get(\"/standings/team/\".concat(teamId,\"/year/\").concat(year));}return api.get(\"/standings/team/\".concat(teamId));},// Get conference standings for a specific year\ngetByConference:(conference,year)=>api.get(\"/standings/conference/\".concat(conference,\"/year/\").concat(year)),// Get top ranked teams\ngetRanked:(year,limit)=>api.get(\"/standings/ranked/year/\".concat(year),{params:{limit}}),// Get teams receiving votes\ngetReceivingVotes:year=>api.get(\"/standings/votes/year/\".concat(year)),// Calculate standings for a year\ncalculateStandings:year=>api.post(\"/standings/calculate/\".concat(year)),// Calculate conference standings\ncalculateConferenceStandings:(conference,year)=>api.post(\"/standings/calculate/conference/\".concat(conference,\"/year/\").concat(year)),// CRUD operations\ncreate:standing=>api.post('/standings',standing),update:(id,standing)=>api.put(\"/standings/\".concat(id),standing),delete:id=>api.delete(\"/standings/\".concat(id))};export const conferenceStandingsApi={getByConference:(conference,year)=>api.get(\"/conference-standings/\".concat(conference,\"/\").concat(year)),getAll:year=>api.get(\"/conference-standings/all/\".concat(year)),calculate:year=>api.post(\"/conference-standings/calculate/\".concat(year))};export const conferenceChampionshipApi={getChampionshipBid:(teamId,year)=>api.get(\"/conference-championship/bid/\".concat(teamId,\"/\").concat(year))};export const achievementApi={getAll:params=>api.get('/achievements',{params}),getById:id=>api.get(\"/achievements/\".concat(id)),getByType:type=>api.get(\"/achievements/type/\".concat(type)),create:achievement=>api.post('/achievements',achievement),update:(id,achievement)=>api.put(\"/achievements/\".concat(id),achievement),complete:id=>api.patch(\"/achievements/\".concat(id,\"/complete\")),delete:id=>api.delete(\"/achievements/\".concat(id))};export const authApi={login:credentials=>api.post('/auth/login',credentials),register:userData=>api.post('/auth/register',userData),logout:()=>api.post('/auth/logout'),getCurrentUser:()=>api.get('/auth/me'),refreshToken:()=>api.post('/auth/refresh')};export default api;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}