{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/v2';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  // Add auth token to requests\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const teamApi = {\n  getAll: params => api.get('/teams', {\n    params\n  }),\n  getById: id => api.get(`/teams/${id}`),\n  getByConference: conference => api.get(`/teams/conference/${conference}`),\n  getConferences: () => api.get('/teams/conferences'),\n  getHumanTeams: () => api.get('/teams/human'),\n  create: team => api.post('/teams', team),\n  update: (id, team) => api.put(`/teams/${id}`, team),\n  delete: id => api.delete(`/teams/${id}`)\n};\nexport const gameApi = {\n  getAll: params => api.get('/games', {\n    params\n  }),\n  getById: id => api.get(`/games/${id}`),\n  getByTeam: (teamId, year) => api.get(`/games/team/${teamId}`, {\n    params: {\n      year\n    }\n  }),\n  getByWeek: weekId => api.get(`/games/week/${weekId}`),\n  getUpcoming: teamId => api.get('/games/upcoming', {\n    params: {\n      teamId\n    }\n  }),\n  create: game => api.post('/games', game),\n  update: (id, game) => api.put(`/games/${id}`, game),\n  updateScore: (id, homeScore, awayScore) => api.patch(`/games/${id}/score`, {\n    homeScore,\n    awayScore\n  }),\n  delete: id => api.delete(`/games/${id}`)\n};\nexport const standingApi = {\n  getByYear: year => api.get(`/standings/year/${year}`),\n  getByTeam: teamId => api.get(`/standings/team/${teamId}`),\n  getByConference: (conference, year) => api.get(`/standings/conference/${conference}`, {\n    params: {\n      year\n    }\n  }),\n  getRanked: year => api.get(`/standings/ranked/${year}`)\n};\nexport const achievementApi = {\n  getAll: params => api.get('/achievements', {\n    params\n  }),\n  getById: id => api.get(`/achievements/${id}`),\n  getByType: type => api.get(`/achievements/type/${type}`),\n  create: achievement => api.post('/achievements', achievement),\n  update: (id, achievement) => api.put(`/achievements/${id}`, achievement),\n  complete: id => api.patch(`/achievements/${id}/complete`),\n  delete: id => api.delete(`/achievements/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","console","data","message","teamApi","getAll","params","get","getById","id","getByConference","conference","getConferences","getHumanTeams","team","post","update","put","delete","gameApi","getByTeam","teamId","year","getByWeek","weekId","getUpcoming","game","updateScore","homeScore","awayScore","patch","standingApi","getByYear","getRanked","achievementApi","getByType","type","achievement","complete"],"sources":["/Users/brodycritchlow/Projects/footballdynasty-new/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport type { PaginatedResponse, Team, Game, Standing, Achievement } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/v2';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    // Add auth token to requests\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const teamApi = {\n  getAll: (params?: { search?: string; page?: number; size?: number }) =>\n    api.get<PaginatedResponse<Team>>('/teams', { params }),\n  \n  getById: (id: string) =>\n    api.get<Team>(`/teams/${id}`),\n  \n  getByConference: (conference: string) =>\n    api.get<Team[]>(`/teams/conference/${conference}`),\n  \n  getConferences: () =>\n    api.get<string[]>('/teams/conferences'),\n  \n  getHumanTeams: () =>\n    api.get<Team[]>('/teams/human'),\n  \n  create: (team: Omit<Team, 'id'>) =>\n    api.post<Team>('/teams', team),\n  \n  update: (id: string, team: Partial<Team>) =>\n    api.put<Team>(`/teams/${id}`, team),\n  \n  delete: (id: string) =>\n    api.delete(`/teams/${id}`),\n};\n\nexport const gameApi = {\n  getAll: (params?: { page?: number; size?: number; year?: number }) =>\n    api.get<PaginatedResponse<Game>>('/games', { params }),\n  \n  getById: (id: string) =>\n    api.get<Game>(`/games/${id}`),\n  \n  getByTeam: (teamId: string, year?: number) =>\n    api.get<Game[]>(`/games/team/${teamId}`, { params: { year } }),\n  \n  getByWeek: (weekId: string) =>\n    api.get<Game[]>(`/games/week/${weekId}`),\n  \n  getUpcoming: (teamId?: string) =>\n    api.get<Game[]>('/games/upcoming', { params: { teamId } }),\n  \n  create: (game: Omit<Game, 'id'>) =>\n    api.post<Game>('/games', game),\n  \n  update: (id: string, game: Partial<Game>) =>\n    api.put<Game>(`/games/${id}`, game),\n  \n  updateScore: (id: string, homeScore: number, awayScore: number) =>\n    api.patch<Game>(`/games/${id}/score`, { homeScore, awayScore }),\n  \n  delete: (id: string) =>\n    api.delete(`/games/${id}`),\n};\n\nexport const standingApi = {\n  getByYear: (year: number) =>\n    api.get<Standing[]>(`/standings/year/${year}`),\n  \n  getByTeam: (teamId: string) =>\n    api.get<Standing[]>(`/standings/team/${teamId}`),\n  \n  getByConference: (conference: string, year: number) =>\n    api.get<Standing[]>(`/standings/conference/${conference}`, { params: { year } }),\n  \n  getRanked: (year: number) =>\n    api.get<Standing[]>(`/standings/ranked/${year}`),\n};\n\nexport const achievementApi = {\n  getAll: (params?: { page?: number; size?: number; type?: string; completed?: boolean }) =>\n    api.get<PaginatedResponse<Achievement>>('/achievements', { params }),\n  \n  getById: (id: string) =>\n    api.get<Achievement>(`/achievements/${id}`),\n  \n  getByType: (type: string) =>\n    api.get<Achievement[]>(`/achievements/type/${type}`),\n  \n  create: (achievement: Omit<Achievement, 'id'>) =>\n    api.post<Achievement>('/achievements', achievement),\n  \n  update: (id: string, achievement: Partial<Achievement>) =>\n    api.put<Achievement>(`/achievements/${id}`, achievement),\n  \n  complete: (id: string) =>\n    api.patch<Achievement>(`/achievements/${id}/complete`),\n  \n  delete: (id: string) =>\n    api.delete(`/achievements/${id}`),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}