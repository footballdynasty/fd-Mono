{"ast":null,"code":"import _defineProperty from \"/Users/brodycritchlow/Projects/footballdynasty-new/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 100);\n    _defineProperty(this, \"incompatibleTokens\", [\"y\", \"Y\", \"u\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"e\", \"c\", \"t\", \"T\"]);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, {\n          unit: \"week\"\n        });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}