{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { weekApi } from '../services/api';\nexport const useSeasonProgress = () => {\n  _s();\n  return useQuery({\n    queryKey: ['season-progress'],\n    queryFn: async () => {\n      const response = await weekApi.getCurrent();\n      return response.data;\n    },\n    staleTime: 5 * 60 * 1000,\n    // Consider data fresh for 5 minutes\n    gcTime: 10 * 60 * 1000,\n    // Keep in cache for 10 minutes\n    retry: 3,\n    retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 30000)\n  });\n};\n_s(useSeasonProgress, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","weekApi","useSeasonProgress","_s","queryKey","queryFn","response","getCurrent","data","staleTime","gcTime","retry","retryDelay","attemptIndex","Math","min"],"sources":["/Users/brodycritchlow/Projects/footballdynasty-new/frontend/src/hooks/useSeasonProgress.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { weekApi } from '../services/api';\n\nexport const useSeasonProgress = () => {\n  return useQuery({\n    queryKey: ['season-progress'],\n    queryFn: async () => {\n      const response = await weekApi.getCurrent();\n      return response.data;\n    },\n    staleTime: 5 * 60 * 1000, // Consider data fresh for 5 minutes\n    gcTime: 10 * 60 * 1000, // Keep in cache for 10 minutes\n    retry: 3,\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n  });\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,OAAOH,QAAQ,CAAC;IACdI,QAAQ,EAAE,CAAC,iBAAiB,CAAC;IAC7BC,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,UAAU,CAAC,CAAC;MAC3C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC;IACDC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI;IAAE;IAC1BC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI;IAAE;IACxBC,KAAK,EAAE,CAAC;IACRC,UAAU,EAAGC,YAAY,IAAKC,IAAI,CAACC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAIF,YAAY,EAAE,KAAK;EACxE,CAAC,CAAC;AACJ,CAAC;AAACV,EAAA,CAZWD,iBAAiB;EAAA,QACrBF,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}