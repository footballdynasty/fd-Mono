{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/v2';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  // Add auth token to requests\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  // Handle 401 errors by clearing auth data\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('selected_team');\n    window.location.reload();\n  }\n  console.error('API Error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  return Promise.reject(error);\n});\nexport const teamApi = {\n  getAll: params => api.get('/teams', {\n    params\n  }),\n  getById: id => api.get(`/teams/${id}`),\n  getByConference: conference => api.get(`/teams/conference/${conference}`),\n  getConferences: () => api.get('/teams/conferences'),\n  getHumanTeams: () => api.get('/teams/human'),\n  create: team => api.post('/teams', team),\n  update: (id, team) => api.put(`/teams/${id}`, team),\n  delete: id => api.delete(`/teams/${id}`)\n};\nexport const gameApi = {\n  getAll: params => api.get('/games', {\n    params\n  }),\n  getById: id => api.get(`/games/${id}`),\n  getByTeam: (teamId, year) => api.get(`/games/team/${teamId}`, {\n    params: {\n      year\n    }\n  }),\n  getByWeek: weekId => api.get(`/games/week/${weekId}`),\n  getUpcoming: teamId => api.get('/games/upcoming', {\n    params: {\n      teamId\n    }\n  }),\n  getRecent: (teamId, limit) => api.get('/games/recent', {\n    params: {\n      teamId,\n      limit\n    }\n  }),\n  create: game => api.post('/games', game),\n  update: (id, game) => api.put(`/games/${id}`, game),\n  updateScore: (id, homeScore, awayScore) => api.patch(`/games/${id}/score`, {\n    homeScore,\n    awayScore\n  }),\n  delete: id => api.delete(`/games/${id}`)\n};\nexport const standingApi = {\n  getByYear: year => api.get(`/standings/year/${year}`),\n  getByTeam: teamId => api.get(`/standings/team/${teamId}`),\n  getByConference: (conference, year) => api.get(`/standings/conference/${conference}`, {\n    params: {\n      year\n    }\n  }),\n  getRanked: year => api.get(`/standings/ranked/${year}`)\n};\nexport const conferenceStandingsApi = {\n  getByConference: (conference, year) => api.get(`/conference-standings/${conference}/${year}`),\n  getAll: year => api.get(`/conference-standings/all/${year}`),\n  calculate: year => api.post(`/conference-standings/calculate/${year}`)\n};\nexport const conferenceChampionshipApi = {\n  getChampionshipBid: (teamId, year) => api.get(`/conference-championship/bid/${teamId}/${year}`)\n};\nexport const achievementApi = {\n  getAll: params => api.get('/achievements', {\n    params\n  }),\n  getById: id => api.get(`/achievements/${id}`),\n  getByType: type => api.get(`/achievements/type/${type}`),\n  create: achievement => api.post('/achievements', achievement),\n  update: (id, achievement) => api.put(`/achievements/${id}`, achievement),\n  complete: id => api.patch(`/achievements/${id}/complete`),\n  delete: id => api.delete(`/achievements/${id}`)\n};\nexport const authApi = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me'),\n  refreshToken: () => api.post('/auth/refresh')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","removeItem","window","location","reload","console","data","message","teamApi","getAll","params","get","getById","id","getByConference","conference","getConferences","getHumanTeams","team","post","update","put","delete","gameApi","getByTeam","teamId","year","getByWeek","weekId","getUpcoming","getRecent","limit","game","updateScore","homeScore","awayScore","patch","standingApi","getByYear","getRanked","conferenceStandingsApi","calculate","conferenceChampionshipApi","getChampionshipBid","achievementApi","getByType","type","achievement","complete","authApi","login","credentials","register","userData","logout","getCurrentUser","refreshToken"],"sources":["/Users/brodycritchlow/Projects/footballdynasty-new/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport type { PaginatedResponse, Team, Game, Standing, Achievement, LoginRequest, RegisterRequest, AuthResponse } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/v2';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    // Add auth token to requests\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle 401 errors by clearing auth data\n    if (error.response?.status === 401) {\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user');\n      localStorage.removeItem('selected_team');\n      window.location.reload();\n    }\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const teamApi = {\n  getAll: (params?: { search?: string; page?: number; size?: number }) =>\n    api.get<PaginatedResponse<Team>>('/teams', { params }),\n  \n  getById: (id: string) =>\n    api.get<Team>(`/teams/${id}`),\n  \n  getByConference: (conference: string) =>\n    api.get<Team[]>(`/teams/conference/${conference}`),\n  \n  getConferences: () =>\n    api.get<string[]>('/teams/conferences'),\n  \n  getHumanTeams: () =>\n    api.get<Team[]>('/teams/human'),\n  \n  create: (team: Omit<Team, 'id'>) =>\n    api.post<Team>('/teams', team),\n  \n  update: (id: string, team: Partial<Team>) =>\n    api.put<Team>(`/teams/${id}`, team),\n  \n  delete: (id: string) =>\n    api.delete(`/teams/${id}`),\n};\n\nexport const gameApi = {\n  getAll: (params?: { page?: number; size?: number; year?: number }) =>\n    api.get<PaginatedResponse<Game>>('/games', { params }),\n  \n  getById: (id: string) =>\n    api.get<Game>(`/games/${id}`),\n  \n  getByTeam: (teamId: string, year?: number) =>\n    api.get<Game[]>(`/games/team/${teamId}`, { params: { year } }),\n  \n  getByWeek: (weekId: string) =>\n    api.get<Game[]>(`/games/week/${weekId}`),\n  \n  getUpcoming: (teamId?: string) =>\n    api.get<Game[]>('/games/upcoming', { params: { teamId } }),\n  \n  getRecent: (teamId?: string, limit?: number) =>\n    api.get<Game[]>('/games/recent', { params: { teamId, limit } }),\n  \n  create: (game: Omit<Game, 'id'>) =>\n    api.post<Game>('/games', game),\n  \n  update: (id: string, game: Partial<Game>) =>\n    api.put<Game>(`/games/${id}`, game),\n  \n  updateScore: (id: string, homeScore: number, awayScore: number) =>\n    api.patch<Game>(`/games/${id}/score`, { homeScore, awayScore }),\n  \n  delete: (id: string) =>\n    api.delete(`/games/${id}`),\n};\n\nexport const standingApi = {\n  getByYear: (year: number) =>\n    api.get<Standing[]>(`/standings/year/${year}`),\n  \n  getByTeam: (teamId: string) =>\n    api.get<Standing[]>(`/standings/team/${teamId}`),\n  \n  getByConference: (conference: string, year: number) =>\n    api.get<Standing[]>(`/standings/conference/${conference}`, { params: { year } }),\n  \n  getRanked: (year: number) =>\n    api.get<Standing[]>(`/standings/ranked/${year}`),\n};\n\nexport const conferenceStandingsApi = {\n  getByConference: (conference: string, year: number) => \n    api.get(`/conference-standings/${conference}/${year}`),\n  getAll: (year: number) => \n    api.get(`/conference-standings/all/${year}`),\n  calculate: (year: number) => \n    api.post(`/conference-standings/calculate/${year}`),\n};\n\nexport const conferenceChampionshipApi = {\n  getChampionshipBid: (teamId: string, year: number) => \n    api.get(`/conference-championship/bid/${teamId}/${year}`),\n};\n\nexport const achievementApi = {\n  getAll: (params?: { page?: number; size?: number; type?: string; completed?: boolean }) =>\n    api.get<PaginatedResponse<Achievement>>('/achievements', { params }),\n  \n  getById: (id: string) =>\n    api.get<Achievement>(`/achievements/${id}`),\n  \n  getByType: (type: string) =>\n    api.get<Achievement[]>(`/achievements/type/${type}`),\n  \n  create: (achievement: Omit<Achievement, 'id'>) =>\n    api.post<Achievement>('/achievements', achievement),\n  \n  update: (id: string, achievement: Partial<Achievement>) =>\n    api.put<Achievement>(`/achievements/${id}`, achievement),\n  \n  complete: (id: string) =>\n    api.patch<Achievement>(`/achievements/${id}/complete`),\n  \n  delete: (id: string) =>\n    api.delete(`/achievements/${id}`),\n};\n\nexport const authApi = {\n  login: (credentials: LoginRequest) =>\n    api.post<AuthResponse>('/auth/login', credentials),\n  \n  register: (userData: RegisterRequest) =>\n    api.post<AuthResponse>('/auth/register', userData),\n  \n  logout: () =>\n    api.post('/auth/logout'),\n  \n  getCurrentUser: () =>\n    api.get('/auth/me'),\n  \n  refreshToken: () =>\n    api.post('/auth/refresh'),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}