{"ast":null,"code":"export let GameStatus = /*#__PURE__*/function (GameStatus) {\n  GameStatus[\"SCHEDULED\"] = \"SCHEDULED\";\n  GameStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n  GameStatus[\"COMPLETED\"] = \"COMPLETED\";\n  GameStatus[\"CANCELLED\"] = \"CANCELLED\";\n  return GameStatus;\n}({});\nexport let AchievementType = /*#__PURE__*/function (AchievementType) {\n  AchievementType[\"WINS\"] = \"WINS\";\n  AchievementType[\"SEASON\"] = \"SEASON\";\n  AchievementType[\"CHAMPIONSHIP\"] = \"CHAMPIONSHIP\";\n  AchievementType[\"STATISTICS\"] = \"STATISTICS\";\n  AchievementType[\"GENERAL\"] = \"GENERAL\";\n  return AchievementType;\n}({});\nexport let AchievementRarity = /*#__PURE__*/function (AchievementRarity) {\n  AchievementRarity[\"COMMON\"] = \"COMMON\";\n  AchievementRarity[\"UNCOMMON\"] = \"UNCOMMON\";\n  AchievementRarity[\"RARE\"] = \"RARE\";\n  AchievementRarity[\"EPIC\"] = \"EPIC\";\n  AchievementRarity[\"LEGENDARY\"] = \"LEGENDARY\";\n  return AchievementRarity;\n}({});","map":{"version":3,"names":["GameStatus","AchievementType","AchievementRarity"],"sources":["/Users/brodycritchlow/Projects/footballdynasty-new/frontend/src/types/index.ts"],"sourcesContent":["export interface Team {\n  id: string;\n  name: string;\n  coach?: string;\n  username?: string;\n  conference?: string;\n  isHuman?: boolean;\n  imageUrl?: string;\n  createdAt?: string;\n  updatedAt?: string;\n  currentWins?: number;\n  currentLosses?: number;\n  winPercentage?: number;\n  currentRank?: number;\n  totalGames?: number;\n}\n\nexport interface Game {\n  id: string;\n  gameId: string;\n  homeTeamId: string;\n  homeTeamName: string;\n  homeTeamImageUrl?: string;\n  awayTeamId: string;\n  awayTeamName: string;\n  awayTeamImageUrl?: string;\n  homeScore: number;\n  awayScore: number;\n  date: string;\n  weekId?: string;\n  weekNumber?: number;\n  year?: number;\n  homeTeamRank?: number;\n  awayTeamRank?: number;\n  status: GameStatus;\n  createdAt?: string;\n  updatedAt?: string;\n  statusDisplay?: string;\n  scoreDisplay?: string;\n  isCompleted?: boolean;\n  winnerName?: string;\n}\n\nexport enum GameStatus {\n  SCHEDULED = 'SCHEDULED',\n  IN_PROGRESS = 'IN_PROGRESS', \n  COMPLETED = 'COMPLETED',\n  CANCELLED = 'CANCELLED',\n}\n\nexport interface Standing {\n  id: string;\n  team: Team;\n  year: number;\n  wins: number;\n  losses: number;\n  conference_wins: number;\n  conference_losses: number;\n  rank?: number;\n  conference_rank?: number;\n  receiving_votes: number;\n  created_at: string;\n  updated_at: string;\n  // Calculated fields\n  win_percentage: number;\n  total_games: number;\n  conference_win_percentage: number;\n  total_conference_games: number;\n}\n\nexport interface StandingCreateRequest {\n  team_id: string;\n  year: number;\n  wins?: number;\n  losses?: number;\n  conference_wins?: number;\n  conference_losses?: number;\n  rank?: number;\n  conference_rank?: number;\n  receiving_votes?: number;\n}\n\nexport interface StandingUpdateRequest {\n  wins?: number;\n  losses?: number;\n  conference_wins?: number;\n  conference_losses?: number;\n  rank?: number;\n  conference_rank?: number;\n  receiving_votes?: number;\n}\n\nexport interface Achievement {\n  id: string;\n  description: string;\n  reward: string;\n  dateCompleted?: number;\n  type: AchievementType;\n  rarity: AchievementRarity;\n  icon?: string;\n  color?: string;\n  isCompleted: boolean;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport enum AchievementType {\n  WINS = 'WINS',\n  SEASON = 'SEASON', \n  CHAMPIONSHIP = 'CHAMPIONSHIP',\n  STATISTICS = 'STATISTICS',\n  GENERAL = 'GENERAL',\n}\n\nexport enum AchievementRarity {\n  COMMON = 'COMMON',\n  UNCOMMON = 'UNCOMMON',\n  RARE = 'RARE',\n  EPIC = 'EPIC',\n  LEGENDARY = 'LEGENDARY',\n}\n\nexport interface Week {\n  id: string;\n  year: number;\n  weekNumber: number;\n  games?: Game[];\n}\n\nexport interface ApiResponse<T> {\n  data: T;\n  message?: string;\n  success: boolean;\n}\n\nexport interface PaginatedResponse<T> {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  size: number;\n  number: number;\n  first: boolean;\n  last: boolean;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email?: string;\n  selectedTeamId?: string;\n  selectedTeam?: Team;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface AuthContextType {\n  user: User | null;\n  selectedTeam: Team | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  register: (username: string, password: string, email?: string) => Promise<void>;\n  logout: () => void;\n  selectTeam: (team: Team) => void;\n}\n\nexport interface LoginRequest {\n  username: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  username: string;\n  email?: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  selectedTeam?: Team;\n}"],"mappings":"AA2CA,WAAYA,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AA+DtB,WAAYC,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAQ3B,WAAYC,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}