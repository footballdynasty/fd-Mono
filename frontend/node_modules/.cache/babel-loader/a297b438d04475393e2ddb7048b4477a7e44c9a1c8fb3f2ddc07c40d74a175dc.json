{"ast":null,"code":"var _jsxFileName = \"/Users/brodycritchlow/Projects/footballdynasty-new/frontend/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored auth token on app start\n    const token = localStorage.getItem('auth_token');\n    const storedUser = localStorage.getItem('user');\n    const storedTeam = localStorage.getItem('selected_team');\n    if (token && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        if (storedTeam) {\n          const teamData = JSON.parse(storedTeam);\n          setSelectedTeam(teamData);\n        }\n      } catch (error) {\n        console.error('Error parsing stored auth data:', error);\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('selected_team');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      setIsLoading(true);\n      const response = await authApi.login({\n        username,\n        password\n      });\n      const {\n        user: userData,\n        token,\n        selectedTeam: userTeam\n      } = response.data;\n\n      // Store auth data\n      localStorage.setItem('auth_token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      if (userTeam) {\n        localStorage.setItem('selected_team', JSON.stringify(userTeam));\n        setSelectedTeam(userTeam);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      setIsLoading(true);\n      const response = await authApi.register({\n        username,\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token,\n        selectedTeam: userTeam\n      } = response.data;\n\n      // Store auth data\n      localStorage.setItem('auth_token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      if (userTeam) {\n        localStorage.setItem('selected_team', JSON.stringify(userTeam));\n        setSelectedTeam(userTeam);\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('selected_team');\n    setUser(null);\n    setSelectedTeam(null);\n  };\n  const selectTeam = team => {\n    localStorage.setItem('selected_team', JSON.stringify(team));\n    setSelectedTeam(team);\n\n    // Update user with selected team ID\n    if (user) {\n      const updatedUser = {\n        ...user,\n        selectedTeamId: team.id\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n    }\n  };\n  const value = {\n    user,\n    selectedTeam,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    selectTeam\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Jh/FbyCv+lNq3NlYjP4bAdgd7Hw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","selectedTeam","setSelectedTeam","isLoading","setIsLoading","token","localStorage","getItem","storedUser","storedTeam","userData","JSON","parse","teamData","error","console","removeItem","login","username","password","response","userTeam","data","setItem","stringify","register","email","logout","selectTeam","team","updatedUser","selectedTeamId","id","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/brodycritchlow/Projects/footballdynasty-new/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, Team, AuthContextType, LoginRequest, AuthResponse } from '../types';\nimport { authApi } from '../services/api';\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [selectedTeam, setSelectedTeam] = useState<Team | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored auth token on app start\n    const token = localStorage.getItem('auth_token');\n    const storedUser = localStorage.getItem('user');\n    const storedTeam = localStorage.getItem('selected_team');\n\n    if (token && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        \n        if (storedTeam) {\n          const teamData = JSON.parse(storedTeam);\n          setSelectedTeam(teamData);\n        }\n      } catch (error) {\n        console.error('Error parsing stored auth data:', error);\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('selected_team');\n      }\n    }\n    \n    setIsLoading(false);\n  }, []);\n\n  const login = async (username: string, password: string): Promise<void> => {\n    try {\n      setIsLoading(true);\n      const response = await authApi.login({ username, password });\n      const { user: userData, token, selectedTeam: userTeam } = response.data;\n\n      // Store auth data\n      localStorage.setItem('auth_token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setUser(userData);\n      \n      if (userTeam) {\n        localStorage.setItem('selected_team', JSON.stringify(userTeam));\n        setSelectedTeam(userTeam);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (username: string, email: string, password: string): Promise<void> => {\n    try {\n      setIsLoading(true);\n      const response = await authApi.register({ username, email, password });\n      const { user: userData, token, selectedTeam: userTeam } = response.data;\n\n      // Store auth data\n      localStorage.setItem('auth_token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setUser(userData);\n      \n      if (userTeam) {\n        localStorage.setItem('selected_team', JSON.stringify(userTeam));\n        setSelectedTeam(userTeam);\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = (): void => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('selected_team');\n    setUser(null);\n    setSelectedTeam(null);\n  };\n\n  const selectTeam = (team: Team): void => {\n    localStorage.setItem('selected_team', JSON.stringify(team));\n    setSelectedTeam(team);\n    \n    // Update user with selected team ID\n    if (user) {\n      const updatedUser = { ...user, selectedTeamId: team.id };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    selectedTeam,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    selectTeam,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}