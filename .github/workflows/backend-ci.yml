name: Backend CI - Test Coverage & Linting

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  backend-test-and-lint:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: fd_test_db
          POSTGRES_USER: fd_test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U fd_test_user; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Compile backend
      working-directory: ./backend
      run: mvn clean compile

    - name: Run code style check (checkstyle)
      working-directory: ./backend
      run: mvn checkstyle:check || true

    - name: Run tests with coverage
      working-directory: ./backend
      env:
        SPRING_PROFILES_ACTIVE: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: fd_test_db
        DB_USERNAME: fd_test_user
        DB_PASSWORD: test_password
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      run: mvn test jacoco:report

    - name: Generate test coverage report
      working-directory: ./backend
      run: mvn jacoco:report

    - name: Upload coverage reports to Codecov
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: ${{ github.workspace }}/backend/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 40
        min-coverage-changed-files: 60
        title: Backend Test Coverage Report

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: backend-test-results
        path: |
          backend/target/surefire-reports/
          backend/target/site/jacoco/

    - name: Check test coverage threshold
      working-directory: ./backend
      run: |
        # Extract coverage percentage from jacoco report
        if [ -f "target/site/jacoco/index.html" ]; then
          coverage=$(grep -o "Total.*[0-9]\+%" target/site/jacoco/index.html | tail -1 | grep -o "[0-9]\+%" | head -1 | sed 's/%//')
          echo "Current test coverage: ${coverage}%"
          
          # Set minimum coverage threshold
          MIN_COVERAGE=30
          
          if [ "$coverage" -lt "$MIN_COVERAGE" ]; then
            echo "❌ Test coverage ${coverage}% is below minimum threshold of ${MIN_COVERAGE}%"
            echo "Please add more tests to improve coverage."
            exit 1
          else
            echo "✅ Test coverage ${coverage}% meets minimum threshold of ${MIN_COVERAGE}%"
          fi
        else
          echo "⚠️ Coverage report not found"
        fi

  code-quality:
    runs-on: ubuntu-latest
    needs: backend-test-and-lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run SpotBugs analysis
      working-directory: ./backend
      run: mvn spotbugs:check || true

    - name: Run PMD analysis
      working-directory: ./backend
      run: mvn pmd:check || true

    - name: Package application
      working-directory: ./backend
      run: mvn package -DskipTests

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: backend/target/*.jar